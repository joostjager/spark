// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: spark_token_internal.proto

package spark_token_internal

import (
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	spark_token "github.com/lightsparkdev/spark/proto/spark_token"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PrepareTransactionRequest struct {
	state                      protoimpl.MessageState          `protogen:"open.v1"`
	FinalTokenTransaction      *spark_token.TokenTransaction   `protobuf:"bytes,1,opt,name=final_token_transaction,json=finalTokenTransaction,proto3" json:"final_token_transaction,omitempty"`
	TokenTransactionSignatures *spark_token.SignatureWithIndex `protobuf:"bytes,2,opt,name=token_transaction_signatures,json=tokenTransactionSignatures,proto3" json:"token_transaction_signatures,omitempty"`
	KeyshareIds                []string                        `protobuf:"bytes,3,rep,name=keyshare_ids,json=keyshareIds,proto3" json:"keyshare_ids,omitempty"`
	CoordinatorPublicKey       []byte                          `protobuf:"bytes,10,opt,name=coordinator_public_key,json=coordinatorPublicKey,proto3" json:"coordinator_public_key,omitempty"`
	unknownFields              protoimpl.UnknownFields
	sizeCache                  protoimpl.SizeCache
}

func (x *PrepareTransactionRequest) Reset() {
	*x = PrepareTransactionRequest{}
	mi := &file_spark_token_internal_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PrepareTransactionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PrepareTransactionRequest) ProtoMessage() {}

func (x *PrepareTransactionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spark_token_internal_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PrepareTransactionRequest.ProtoReflect.Descriptor instead.
func (*PrepareTransactionRequest) Descriptor() ([]byte, []int) {
	return file_spark_token_internal_proto_rawDescGZIP(), []int{0}
}

func (x *PrepareTransactionRequest) GetFinalTokenTransaction() *spark_token.TokenTransaction {
	if x != nil {
		return x.FinalTokenTransaction
	}
	return nil
}

func (x *PrepareTransactionRequest) GetTokenTransactionSignatures() *spark_token.SignatureWithIndex {
	if x != nil {
		return x.TokenTransactionSignatures
	}
	return nil
}

func (x *PrepareTransactionRequest) GetKeyshareIds() []string {
	if x != nil {
		return x.KeyshareIds
	}
	return nil
}

func (x *PrepareTransactionRequest) GetCoordinatorPublicKey() []byte {
	if x != nil {
		return x.CoordinatorPublicKey
	}
	return nil
}

type PrepareTransactionResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PrepareTransactionResponse) Reset() {
	*x = PrepareTransactionResponse{}
	mi := &file_spark_token_internal_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PrepareTransactionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PrepareTransactionResponse) ProtoMessage() {}

func (x *PrepareTransactionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_spark_token_internal_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PrepareTransactionResponse.ProtoReflect.Descriptor instead.
func (*PrepareTransactionResponse) Descriptor() ([]byte, []int) {
	return file_spark_token_internal_proto_rawDescGZIP(), []int{1}
}

// === Coordination Signing ===
type SignTokenTransactionFromCoordinationRequest struct {
	state                          protoimpl.MessageState                      `protogen:"open.v1"`
	FinalTokenTransaction          *spark_token.TokenTransaction               `protobuf:"bytes,1,opt,name=final_token_transaction,json=finalTokenTransaction,proto3" json:"final_token_transaction,omitempty"`
	FinalTokenTransactionHash      []byte                                      `protobuf:"bytes,2,opt,name=final_token_transaction_hash,json=finalTokenTransactionHash,proto3" json:"final_token_transaction_hash,omitempty"`
	InputTtxoSignaturesPerOperator *spark_token.InputTtxoSignaturesPerOperator `protobuf:"bytes,3,opt,name=input_ttxo_signatures_per_operator,json=inputTtxoSignaturesPerOperator,proto3" json:"input_ttxo_signatures_per_operator,omitempty"`
	OwnerIdentityPublicKey         []byte                                      `protobuf:"bytes,4,opt,name=owner_identity_public_key,json=ownerIdentityPublicKey,proto3" json:"owner_identity_public_key,omitempty"`
	unknownFields                  protoimpl.UnknownFields
	sizeCache                      protoimpl.SizeCache
}

func (x *SignTokenTransactionFromCoordinationRequest) Reset() {
	*x = SignTokenTransactionFromCoordinationRequest{}
	mi := &file_spark_token_internal_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SignTokenTransactionFromCoordinationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignTokenTransactionFromCoordinationRequest) ProtoMessage() {}

func (x *SignTokenTransactionFromCoordinationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spark_token_internal_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignTokenTransactionFromCoordinationRequest.ProtoReflect.Descriptor instead.
func (*SignTokenTransactionFromCoordinationRequest) Descriptor() ([]byte, []int) {
	return file_spark_token_internal_proto_rawDescGZIP(), []int{2}
}

func (x *SignTokenTransactionFromCoordinationRequest) GetFinalTokenTransaction() *spark_token.TokenTransaction {
	if x != nil {
		return x.FinalTokenTransaction
	}
	return nil
}

func (x *SignTokenTransactionFromCoordinationRequest) GetFinalTokenTransactionHash() []byte {
	if x != nil {
		return x.FinalTokenTransactionHash
	}
	return nil
}

func (x *SignTokenTransactionFromCoordinationRequest) GetInputTtxoSignaturesPerOperator() *spark_token.InputTtxoSignaturesPerOperator {
	if x != nil {
		return x.InputTtxoSignaturesPerOperator
	}
	return nil
}

func (x *SignTokenTransactionFromCoordinationRequest) GetOwnerIdentityPublicKey() []byte {
	if x != nil {
		return x.OwnerIdentityPublicKey
	}
	return nil
}

type SignTokenTransactionFromCoordinationResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The signature from this SO
	SparkOperatorSignature []byte `protobuf:"bytes,1,opt,name=spark_operator_signature,json=sparkOperatorSignature,proto3" json:"spark_operator_signature,omitempty"`
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *SignTokenTransactionFromCoordinationResponse) Reset() {
	*x = SignTokenTransactionFromCoordinationResponse{}
	mi := &file_spark_token_internal_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SignTokenTransactionFromCoordinationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignTokenTransactionFromCoordinationResponse) ProtoMessage() {}

func (x *SignTokenTransactionFromCoordinationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_spark_token_internal_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignTokenTransactionFromCoordinationResponse.ProtoReflect.Descriptor instead.
func (*SignTokenTransactionFromCoordinationResponse) Descriptor() ([]byte, []int) {
	return file_spark_token_internal_proto_rawDescGZIP(), []int{3}
}

func (x *SignTokenTransactionFromCoordinationResponse) GetSparkOperatorSignature() []byte {
	if x != nil {
		return x.SparkOperatorSignature
	}
	return nil
}

type OperatorTransactionSignature struct {
	state                     protoimpl.MessageState `protogen:"open.v1"`
	OperatorIdentityPublicKey []byte                 `protobuf:"bytes,1,opt,name=operator_identity_public_key,json=operatorIdentityPublicKey,proto3" json:"operator_identity_public_key,omitempty"`
	Signature                 []byte                 `protobuf:"bytes,2,opt,name=signature,proto3" json:"signature,omitempty"`
	unknownFields             protoimpl.UnknownFields
	sizeCache                 protoimpl.SizeCache
}

func (x *OperatorTransactionSignature) Reset() {
	*x = OperatorTransactionSignature{}
	mi := &file_spark_token_internal_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OperatorTransactionSignature) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OperatorTransactionSignature) ProtoMessage() {}

func (x *OperatorTransactionSignature) ProtoReflect() protoreflect.Message {
	mi := &file_spark_token_internal_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OperatorTransactionSignature.ProtoReflect.Descriptor instead.
func (*OperatorTransactionSignature) Descriptor() ([]byte, []int) {
	return file_spark_token_internal_proto_rawDescGZIP(), []int{4}
}

func (x *OperatorTransactionSignature) GetOperatorIdentityPublicKey() []byte {
	if x != nil {
		return x.OperatorIdentityPublicKey
	}
	return nil
}

func (x *OperatorTransactionSignature) GetSignature() []byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

type RevocationSecretShare struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	InputTtxoId   string                 `protobuf:"bytes,1,opt,name=input_ttxo_id,json=inputTtxoId,proto3" json:"input_ttxo_id,omitempty"`
	SecretShare   []byte                 `protobuf:"bytes,2,opt,name=secret_share,json=secretShare,proto3" json:"secret_share,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RevocationSecretShare) Reset() {
	*x = RevocationSecretShare{}
	mi := &file_spark_token_internal_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RevocationSecretShare) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RevocationSecretShare) ProtoMessage() {}

func (x *RevocationSecretShare) ProtoReflect() protoreflect.Message {
	mi := &file_spark_token_internal_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RevocationSecretShare.ProtoReflect.Descriptor instead.
func (*RevocationSecretShare) Descriptor() ([]byte, []int) {
	return file_spark_token_internal_proto_rawDescGZIP(), []int{5}
}

func (x *RevocationSecretShare) GetInputTtxoId() string {
	if x != nil {
		return x.InputTtxoId
	}
	return ""
}

func (x *RevocationSecretShare) GetSecretShare() []byte {
	if x != nil {
		return x.SecretShare
	}
	return nil
}

type OperatorRevocationShares struct {
	state                     protoimpl.MessageState   `protogen:"open.v1"`
	OperatorIdentityPublicKey []byte                   `protobuf:"bytes,1,opt,name=operator_identity_public_key,json=operatorIdentityPublicKey,proto3" json:"operator_identity_public_key,omitempty"`
	Shares                    []*RevocationSecretShare `protobuf:"bytes,2,rep,name=shares,proto3" json:"shares,omitempty"`
	unknownFields             protoimpl.UnknownFields
	sizeCache                 protoimpl.SizeCache
}

func (x *OperatorRevocationShares) Reset() {
	*x = OperatorRevocationShares{}
	mi := &file_spark_token_internal_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OperatorRevocationShares) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OperatorRevocationShares) ProtoMessage() {}

func (x *OperatorRevocationShares) ProtoReflect() protoreflect.Message {
	mi := &file_spark_token_internal_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OperatorRevocationShares.ProtoReflect.Descriptor instead.
func (*OperatorRevocationShares) Descriptor() ([]byte, []int) {
	return file_spark_token_internal_proto_rawDescGZIP(), []int{6}
}

func (x *OperatorRevocationShares) GetOperatorIdentityPublicKey() []byte {
	if x != nil {
		return x.OperatorIdentityPublicKey
	}
	return nil
}

func (x *OperatorRevocationShares) GetShares() []*RevocationSecretShare {
	if x != nil {
		return x.Shares
	}
	return nil
}

// === Revocation Secret Exchange ===
type ExchangeRevocationSecretsSharesRequest struct {
	state                         protoimpl.MessageState          `protogen:"open.v1"`
	FinalTokenTransaction         *spark_token.TokenTransaction   `protobuf:"bytes,1,opt,name=final_token_transaction,json=finalTokenTransaction,proto3" json:"final_token_transaction,omitempty"`
	FinalTokenTransactionHash     []byte                          `protobuf:"bytes,2,opt,name=final_token_transaction_hash,json=finalTokenTransactionHash,proto3" json:"final_token_transaction_hash,omitempty"`
	OperatorTransactionSignatures []*OperatorTransactionSignature `protobuf:"bytes,3,rep,name=operator_transaction_signatures,json=operatorTransactionSignatures,proto3" json:"operator_transaction_signatures,omitempty"`
	// The revocation secret shares this SO is revealing, grouped by operator
	OperatorShares            []*OperatorRevocationShares `protobuf:"bytes,4,rep,name=operator_shares,json=operatorShares,proto3" json:"operator_shares,omitempty"`
	OperatorIdentityPublicKey []byte                      `protobuf:"bytes,5,opt,name=operator_identity_public_key,json=operatorIdentityPublicKey,proto3" json:"operator_identity_public_key,omitempty"`
	unknownFields             protoimpl.UnknownFields
	sizeCache                 protoimpl.SizeCache
}

func (x *ExchangeRevocationSecretsSharesRequest) Reset() {
	*x = ExchangeRevocationSecretsSharesRequest{}
	mi := &file_spark_token_internal_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExchangeRevocationSecretsSharesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExchangeRevocationSecretsSharesRequest) ProtoMessage() {}

func (x *ExchangeRevocationSecretsSharesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spark_token_internal_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExchangeRevocationSecretsSharesRequest.ProtoReflect.Descriptor instead.
func (*ExchangeRevocationSecretsSharesRequest) Descriptor() ([]byte, []int) {
	return file_spark_token_internal_proto_rawDescGZIP(), []int{7}
}

func (x *ExchangeRevocationSecretsSharesRequest) GetFinalTokenTransaction() *spark_token.TokenTransaction {
	if x != nil {
		return x.FinalTokenTransaction
	}
	return nil
}

func (x *ExchangeRevocationSecretsSharesRequest) GetFinalTokenTransactionHash() []byte {
	if x != nil {
		return x.FinalTokenTransactionHash
	}
	return nil
}

func (x *ExchangeRevocationSecretsSharesRequest) GetOperatorTransactionSignatures() []*OperatorTransactionSignature {
	if x != nil {
		return x.OperatorTransactionSignatures
	}
	return nil
}

func (x *ExchangeRevocationSecretsSharesRequest) GetOperatorShares() []*OperatorRevocationShares {
	if x != nil {
		return x.OperatorShares
	}
	return nil
}

func (x *ExchangeRevocationSecretsSharesRequest) GetOperatorIdentityPublicKey() []byte {
	if x != nil {
		return x.OperatorIdentityPublicKey
	}
	return nil
}

type ExchangeRevocationSecretsSharesResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The revocation secret shares from other SOs, grouped by operator
	ReceivedOperatorShares []*OperatorRevocationShares `protobuf:"bytes,1,rep,name=received_operator_shares,json=receivedOperatorShares,proto3" json:"received_operator_shares,omitempty"`
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *ExchangeRevocationSecretsSharesResponse) Reset() {
	*x = ExchangeRevocationSecretsSharesResponse{}
	mi := &file_spark_token_internal_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExchangeRevocationSecretsSharesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExchangeRevocationSecretsSharesResponse) ProtoMessage() {}

func (x *ExchangeRevocationSecretsSharesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_spark_token_internal_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExchangeRevocationSecretsSharesResponse.ProtoReflect.Descriptor instead.
func (*ExchangeRevocationSecretsSharesResponse) Descriptor() ([]byte, []int) {
	return file_spark_token_internal_proto_rawDescGZIP(), []int{8}
}

func (x *ExchangeRevocationSecretsSharesResponse) GetReceivedOperatorShares() []*OperatorRevocationShares {
	if x != nil {
		return x.ReceivedOperatorShares
	}
	return nil
}

var File_spark_token_internal_proto protoreflect.FileDescriptor

const file_spark_token_internal_proto_rawDesc = "" +
	"\n" +
	"\x1aspark_token_internal.proto\x12\vspark_token\x1a\x11spark_token.proto\x1a\x17validate/validate.proto\"\xae\x02\n" +
	"\x19PrepareTransactionRequest\x12U\n" +
	"\x17final_token_transaction\x18\x01 \x01(\v2\x1d.spark_token.TokenTransactionR\x15finalTokenTransaction\x12a\n" +
	"\x1ctoken_transaction_signatures\x18\x02 \x01(\v2\x1f.spark_token.SignatureWithIndexR\x1atokenTransactionSignatures\x12!\n" +
	"\fkeyshare_ids\x18\x03 \x03(\tR\vkeyshareIds\x124\n" +
	"\x16coordinator_public_key\x18\n" +
	" \x01(\fR\x14coordinatorPublicKey\"\x1c\n" +
	"\x1aPrepareTransactionResponse\"\x8b\x03\n" +
	"+SignTokenTransactionFromCoordinationRequest\x12U\n" +
	"\x17final_token_transaction\x18\x01 \x01(\v2\x1d.spark_token.TokenTransactionR\x15finalTokenTransaction\x12H\n" +
	"\x1cfinal_token_transaction_hash\x18\x02 \x01(\fB\a\xfaB\x04z\x02h R\x19finalTokenTransactionHash\x12w\n" +
	"\"input_ttxo_signatures_per_operator\x18\x03 \x01(\v2+.spark_token.InputTtxoSignaturesPerOperatorR\x1einputTtxoSignaturesPerOperator\x12B\n" +
	"\x19owner_identity_public_key\x18\x04 \x01(\fB\a\xfaB\x04z\x02h!R\x16ownerIdentityPublicKey\"s\n" +
	",SignTokenTransactionFromCoordinationResponse\x12C\n" +
	"\x18spark_operator_signature\x18\x01 \x01(\fB\t\xfaB\x06z\x04\x10@\x18IR\x16sparkOperatorSignature\"\x91\x01\n" +
	"\x1cOperatorTransactionSignature\x12H\n" +
	"\x1coperator_identity_public_key\x18\x01 \x01(\fB\a\xfaB\x04z\x02h!R\x19operatorIdentityPublicKey\x12'\n" +
	"\tsignature\x18\x02 \x01(\fB\t\xfaB\x06z\x04\x10@\x18IR\tsignature\"^\n" +
	"\x15RevocationSecretShare\x12\"\n" +
	"\rinput_ttxo_id\x18\x01 \x01(\tR\vinputTtxoId\x12!\n" +
	"\fsecret_share\x18\x02 \x01(\fR\vsecretShare\"\xa0\x01\n" +
	"\x18OperatorRevocationShares\x12H\n" +
	"\x1coperator_identity_public_key\x18\x01 \x01(\fB\a\xfaB\x04z\x02h!R\x19operatorIdentityPublicKey\x12:\n" +
	"\x06shares\x18\x02 \x03(\v2\".spark_token.RevocationSecretShareR\x06shares\"\xd6\x03\n" +
	"&ExchangeRevocationSecretsSharesRequest\x12U\n" +
	"\x17final_token_transaction\x18\x01 \x01(\v2\x1d.spark_token.TokenTransactionR\x15finalTokenTransaction\x12H\n" +
	"\x1cfinal_token_transaction_hash\x18\x02 \x01(\fB\a\xfaB\x04z\x02h R\x19finalTokenTransactionHash\x12q\n" +
	"\x1foperator_transaction_signatures\x18\x03 \x03(\v2).spark_token.OperatorTransactionSignatureR\x1doperatorTransactionSignatures\x12N\n" +
	"\x0foperator_shares\x18\x04 \x03(\v2%.spark_token.OperatorRevocationSharesR\x0eoperatorShares\x12H\n" +
	"\x1coperator_identity_public_key\x18\x05 \x01(\fB\a\xfaB\x04z\x02h!R\x19operatorIdentityPublicKey\"\x8a\x01\n" +
	"'ExchangeRevocationSecretsSharesResponse\x12_\n" +
	"\x18received_operator_shares\x18\x01 \x03(\v2%.spark_token.OperatorRevocationSharesR\x16receivedOperatorShares2\xbd\x03\n" +
	"\x19SparkTokenInternalService\x12h\n" +
	"\x13prepare_transaction\x12&.spark_token.PrepareTransactionRequest\x1a'.spark_token.PrepareTransactionResponse\"\x00\x12\xa1\x01\n" +
	"(sign_token_transaction_from_coordination\x128.spark_token.SignTokenTransactionFromCoordinationRequest\x1a9.spark_token.SignTokenTransactionFromCoordinationResponse\"\x00\x12\x91\x01\n" +
	"\"exchange_revocation_secrets_shares\x123.spark_token.ExchangeRevocationSecretsSharesRequest\x1a4.spark_token.ExchangeRevocationSecretsSharesResponse\"\x00B;Z9github.com/lightsparkdev/spark/proto/spark_token_internalb\x06proto3"

var (
	file_spark_token_internal_proto_rawDescOnce sync.Once
	file_spark_token_internal_proto_rawDescData []byte
)

func file_spark_token_internal_proto_rawDescGZIP() []byte {
	file_spark_token_internal_proto_rawDescOnce.Do(func() {
		file_spark_token_internal_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_spark_token_internal_proto_rawDesc), len(file_spark_token_internal_proto_rawDesc)))
	})
	return file_spark_token_internal_proto_rawDescData
}

var file_spark_token_internal_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_spark_token_internal_proto_goTypes = []any{
	(*PrepareTransactionRequest)(nil),                    // 0: spark_token.PrepareTransactionRequest
	(*PrepareTransactionResponse)(nil),                   // 1: spark_token.PrepareTransactionResponse
	(*SignTokenTransactionFromCoordinationRequest)(nil),  // 2: spark_token.SignTokenTransactionFromCoordinationRequest
	(*SignTokenTransactionFromCoordinationResponse)(nil), // 3: spark_token.SignTokenTransactionFromCoordinationResponse
	(*OperatorTransactionSignature)(nil),                 // 4: spark_token.OperatorTransactionSignature
	(*RevocationSecretShare)(nil),                        // 5: spark_token.RevocationSecretShare
	(*OperatorRevocationShares)(nil),                     // 6: spark_token.OperatorRevocationShares
	(*ExchangeRevocationSecretsSharesRequest)(nil),       // 7: spark_token.ExchangeRevocationSecretsSharesRequest
	(*ExchangeRevocationSecretsSharesResponse)(nil),      // 8: spark_token.ExchangeRevocationSecretsSharesResponse
	(*spark_token.TokenTransaction)(nil),                 // 9: spark_token.TokenTransaction
	(*spark_token.SignatureWithIndex)(nil),               // 10: spark_token.SignatureWithIndex
	(*spark_token.InputTtxoSignaturesPerOperator)(nil),   // 11: spark_token.InputTtxoSignaturesPerOperator
}
var file_spark_token_internal_proto_depIdxs = []int32{
	9,  // 0: spark_token.PrepareTransactionRequest.final_token_transaction:type_name -> spark_token.TokenTransaction
	10, // 1: spark_token.PrepareTransactionRequest.token_transaction_signatures:type_name -> spark_token.SignatureWithIndex
	9,  // 2: spark_token.SignTokenTransactionFromCoordinationRequest.final_token_transaction:type_name -> spark_token.TokenTransaction
	11, // 3: spark_token.SignTokenTransactionFromCoordinationRequest.input_ttxo_signatures_per_operator:type_name -> spark_token.InputTtxoSignaturesPerOperator
	5,  // 4: spark_token.OperatorRevocationShares.shares:type_name -> spark_token.RevocationSecretShare
	9,  // 5: spark_token.ExchangeRevocationSecretsSharesRequest.final_token_transaction:type_name -> spark_token.TokenTransaction
	4,  // 6: spark_token.ExchangeRevocationSecretsSharesRequest.operator_transaction_signatures:type_name -> spark_token.OperatorTransactionSignature
	6,  // 7: spark_token.ExchangeRevocationSecretsSharesRequest.operator_shares:type_name -> spark_token.OperatorRevocationShares
	6,  // 8: spark_token.ExchangeRevocationSecretsSharesResponse.received_operator_shares:type_name -> spark_token.OperatorRevocationShares
	0,  // 9: spark_token.SparkTokenInternalService.prepare_transaction:input_type -> spark_token.PrepareTransactionRequest
	2,  // 10: spark_token.SparkTokenInternalService.sign_token_transaction_from_coordination:input_type -> spark_token.SignTokenTransactionFromCoordinationRequest
	7,  // 11: spark_token.SparkTokenInternalService.exchange_revocation_secrets_shares:input_type -> spark_token.ExchangeRevocationSecretsSharesRequest
	1,  // 12: spark_token.SparkTokenInternalService.prepare_transaction:output_type -> spark_token.PrepareTransactionResponse
	3,  // 13: spark_token.SparkTokenInternalService.sign_token_transaction_from_coordination:output_type -> spark_token.SignTokenTransactionFromCoordinationResponse
	8,  // 14: spark_token.SparkTokenInternalService.exchange_revocation_secrets_shares:output_type -> spark_token.ExchangeRevocationSecretsSharesResponse
	12, // [12:15] is the sub-list for method output_type
	9,  // [9:12] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_spark_token_internal_proto_init() }
func file_spark_token_internal_proto_init() {
	if File_spark_token_internal_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_spark_token_internal_proto_rawDesc), len(file_spark_token_internal_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_spark_token_internal_proto_goTypes,
		DependencyIndexes: file_spark_token_internal_proto_depIdxs,
		MessageInfos:      file_spark_token_internal_proto_msgTypes,
	}.Build()
	File_spark_token_internal_proto = out.File
	file_spark_token_internal_proto_goTypes = nil
	file_spark_token_internal_proto_depIdxs = nil
}
